{"version":3,"file":"static/webpack/static/development/pages/_app.js.b203539ab0488bf23cc1.hot-update.js","sources":["webpack:///./views/components/modal/SpeakerDetailModal/SpeakerDetailModal.tsx"],"sourcesContent":["import React, {useCallback, useState} from 'react';\nimport cc from 'classcat';\nimport css from './SpeakerDetailModal.scss';\nimport {Speaker} from \"../../../../shared/interfaces\";\nimport {timetable} from \"../../../../shared/data\";\nimport {useModal} from \"../../../../shared/store\";\nimport CloseBtn from \"../../CloseBtn/CloseBtn\";\n\ninterface SpeakerDetailModalProps {\n  speaker: Speaker;\n}\n\nconst SpeakerDetailModal: React.FC<SpeakerDetailModalProps> = ({ speaker }) => {\n  const { changeSpeaker, closeModal } = useModal();\n  const [rendered, setRendered] = useState(true);\n  const onChangeSpeaker = useCallback((e, val) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setRendered(false);\n    setTimeout(() => {\n      setRendered(true);\n      changeSpeaker(speaker, val);\n    }, 100);\n  }, [speaker]);\n  return (\n    <div className={cc([css.SpeakerDetailModal, rendered ? css.rendered : ''])}>\n      <div\n        className={cc([css.BottomWrap, 'kr-text'])}\n        onClick={e => e.stopPropagation()}\n      >\n        <a className={css.MobileCloseBtn} href=\"#\" onClick={e => {\n          e.preventDefault();\n          closeModal();\n        }}>\n          <CloseBtn isStatic={true}/>\n        </a>\n        <div className={css.LeftBg}/>\n        <div className={css.LeftWrap}>\n          <div className={cc([css.ProfileWrap])}>\n            <div className={css.ProfileImage}>\n              <img src={`/static/images/speakers/${speaker.image}`} alt={speaker.nameEn}/>\n            </div>\n            <div className={css.ProfileTextWrap}>\n              <h1 className={css.ProfileName}>\n                {speaker.name}\n              </h1>\n              {speaker.company ?\n                <a\n                  target=\"_blank\"\n                  href={speaker.company.link}\n                  className={css.ProfileInfo}\n                  onClick={e => e.stopPropagation()}\n                >\n                  {speaker.company.name}\n                </a> : null\n              }\n            </div>\n            <div className={css.ProfileSnsWrap}>\n              {speaker.sns.twitter ?\n                <a href={speaker.sns.twitter} target=\"_blank\">\n                  <img src={'/static/images/icons/twitter.svg'} alt=\"Twitter Link\"/>\n                </a> : null\n              }\n              {speaker.sns.github ?\n                <a href={speaker.sns.github} target=\"_blank\">\n                  <img src={'/static/images/icons/github.svg'} alt=\"GitHub Link\"/>\n                </a> : null\n              }\n              {speaker.sns.facebook ?\n                <a href={speaker.sns.facebook} target=\"_blank\">\n                  <img src={'/static/images/icons/facebook.svg'} alt=\"Facebook Link\"/>\n                </a> : null\n              }\n              {speaker.sns.link ?\n                <a href={speaker.sns.link} target=\"_blank\">\n                  <img src={'/static/images/icons/link.svg'} alt=\"Link\"/>\n                </a> : null\n              }\n            </div>\n          </div>\n        </div>\n        <div className={css.RightWrap}>\n          <div className={css.NavWrap}>\n            <a href=\"#\" onClick={(e) => onChangeSpeaker(e, -1)}>◀︎ 이전 스피커</a>\n            <a href=\"#\" onClick={(e) => onChangeSpeaker(e, 1)}>다음 스피커 ▶︎</a>\n          </div>\n          <div className={css.ProfileWrap}>\n            <p\n              className={css.ProfileDesc}\n              dangerouslySetInnerHTML={{__html: speaker.track.description}}\n            />\n            <p\n              className={css.ProfileTarget}\n              dangerouslySetInnerHTML={{__html: '대상 : ' + speaker.track.target}}\n            />\n            <p className={css.TrackTime}>\n              2019년 10월 26일 | { timetable[speaker.track.order] } <br/>\n              Track {speaker.track.type === 'A' ? 1 : 2}\n            </p>\n            <h2 className={css.TrackTitle}>{speaker.track.title}</h2>\n            {\n              speaker.documentUrl ?\n                <h2 className={css.Document}>\n                  <a target=\"_blank\" href={speaker.documentUrl}>\n                    [발표자료]\n                  </a>\n                  <a target=\"_blank\" href={speaker.documentUrl}>\n                    [발표영상]\n                  </a>\n                </h2> : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SpeakerDetailModal;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}